#!/bin/sh
printfw() {
    if [ "$1" = "-n" ]; then shift; printf "%b" "$*"; else printf "%b\n" "$*";fi
}

error() {
    printfw "\033[1;31m$*\033[0m" 1>&2
    exit 1
}

depcheck() {
    for cmd in "$@"; do
        if ! command -v "$cmd" > /dev/null 2>&1; then
            error "\"$cmd\" is not installed."
        fi
    done
}

depcheck wget
if [ "$TMPDIR" = "" ]; then
    TMPDIR="/tmp"
fi
KEEP=false
YES=false
GLOBAL=true
DIR="/usr/local/lib/powershell"
PATHDIR=""

while [ $# -ne 0 ]; do
    case "$1" in
        -h | --help)
            printfw "$0: Update/install PowerShell on Linux distros
Usage:
-h | --help
    Print a help message and exit.

-k | --keep
    Keep the downloaded archive after installation.

-y | --yes
    Answer \"y\" for everything.

-u | --user
    Only install for user.

-d | --directory [dir]
    Install in [dir]. Must be used with the \"--user\" option."
            exit
            ;;
        -k | --keep)
            KEEP=true
            ;;
        -y | --yes)
            YES=true
            ;;
        -u | --user)
            GLOBAL=false
            if [ "$DIR" = "/usr/local/lib/powershell" ]; then
                DIR="$HOME/.local/lib/powershell"
            fi
            ;;
        -d | --directory)
            if [ $# = 1 ]; then
                error "Missing argument: [dir]"
            fi
            DIR=$(realpath -- "$2")
            shift
            ;;
        *)
            error "\"$1\": invalid option. Run \"$0 --help\" to see all options."
            ;;
    esac
    shift
done

if [ "$(id -u)" != 0 ] && [ $GLOBAL = "true" ]; then
    error "The script requires superuser. Add the \"--user\" option instead."
elif [ $GLOBAL = "true" ] && [ "$DIR" != "/usr/local/lib/powershell" ]; then
    error "The \"--user\" option must be set to use the \"--directory\" option."
elif [ $GLOBAL = "false" ]; then
    case "$DIR" in
        "$HOME/"*)
            ;;
        *)
            error "Please PowerShell in your home directory."
            ;;
    esac
fi

printfw "Installing PowerShell under \"$DIR\"."
case "$(uname -m)" in
    aarch64)
        ARCH="arm64"
        ;;
    arm)
        ARCH="arm32"
        ;;
    x86_64 | amd64)
        ARCH="x64"
        ;;
    *)
        error "Architecture is not supported."
        ;;
esac

LATEST=$(wget -qO- https://github.com/PowerShell/PowerShell/releases/latest | grep -oh "<title>.*</title>" | tr " " "\n" | grep "^v.*$" | tr -d "v")
if [ "$LATEST" = "" ]; then
    error "Failed to get latest PowerShell version."
fi
if command -v "$DIR/pwsh" > /dev/null 2>&1; then
    if [ "$LATEST" = "$("$DIR/pwsh" -v | sed -e "s/PowerShell //g")" ]; then
        printfw "PowerShell is already updated ($LATEST)."
        exit
    fi
    printfw -n "PowerShell ($LATEST) is released! Update? [Y/n] "
else
    printfw -n "PowerShell is not installed. Install? [Y/n] "
fi
if [ $YES = "true" ]; then
    CHOICE="y"
    printfw "y"
else
    read -r CHOICE
fi

if [ "$(printfw "$CHOICE" | tr "[:lower:]" "[:upper:]")" = "N" ]; then
    printfw "Abort."
    exit
fi
TARFILE="$(mktemp -t powershell-XXXXXX.tar.gz)"
printfw "Downloading PowerShell ($LATEST)..."
if ! wget "https://github.com/PowerShell/PowerShell/releases/download/v$LATEST/powershell-$LATEST-linux-$ARCH.tar.gz" -O "$TARFILE" > /dev/null 2>&1; then
    error "Download failed."
fi
printfw "Download done."
printfw "Extracting files..."
if ! (rm -rf "$DIR" > /dev/null 2>&1; mkdir -p "$DIR" > /dev/null 2>&1 && tar -zxf "$TARFILE" -C "$DIR" > /dev/null 2>&1); then
    error "Extract failed."
fi
printfw "Extraction done."
case "$DIR" in
    /usr/local/lib/powershell|"$HOME/.local/lib/powershell")
        PATHDIR="$(dirname "$(dirname "$DIR")")/bin"
        printfw "Symlinking executable to \"$PATHDIR\"..."
        ;;
    *)
        printfw "Directory is customized. Not symlinking to \$PATH."
        printfw "Extraction done. Run \"$DIR/pwsh\" to start PowerShell."
        ;;
esac
if [ "$PATHDIR" != "" ]; then
    if ! (mkdir -p "$PATHDIR" && ln -sf "$DIR/pwsh" "$PATHDIR/pwsh" > /dev/null 2>&1;) then
        error "Linking failed."
    fi
    printfw "Linking done. Make sure that \"$PATHDIR\" is in your \$PATH. Run \"pwsh\" to start PowerShell."
fi
if [ $KEEP = "true" ]; then
    printfw "The archive is stored at \"$TARFILE\". Move it to another directory for later use."
else
    rm -f "$TARFILE"
fi
